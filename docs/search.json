[{"path":"https://naturewaves.github.io/Rthoptera/articles/Apps.html","id":"how-to-launch-an-app","dir":"Articles","previous_headings":"","what":"How to launch an app","title":"Launching Shiny Apps with Rthoptera","text":"Rthoptera, relevant functions come Shiny app companion. NOTE: Wave objects found R environment (.e., haven’t imported yet), import_wave app work. explore apps available, run: launch_app() function supports partial matching, means , example, want run import_wave app, can just type: Rthoptera launch import_wave app. However, apps longer similar names, need type characters. example, run: Rthoptera ask specify . pay attention list available apps, notice ‘song_stats’ apps ones ending ‘hq’ ‘lq’, run: Rthoptera understand trying launch_app(“temporal_stats_hq”). use launch_app() command:","code":"library(Rthoptera) launch_app() launch_app(\"import\") launch_app(\"song_stats\") launch_app('hq')"},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"The Broadband Activity Index","text":"Broadband Activity Index (BBAI) acoustic index designed detect quantify broadband acoustic activity identifying ‘clicks’ audio recordings. Originally developed monitoring environmental noise rain wind soundscape recordings, index broader applications environmental acoustic monitoring bioacoustic research, including quantification stridulation activity Orthoptera (crickets, grasshoppers, etc.), non-stridulating pests stored food wood, among others. BBAI follows principle sounds broadband acoustic signatures appear vertical “clicks” spectrogram. clicks span multiple frequency bins simultaneously represent rapid, broadband acoustic events, also known transient sounds.","code":""},{"path":[]},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"signal-preprocessing","dir":"Articles","previous_headings":"Introduction > Step-by-Step Process","what":"1. Signal Preprocessing","title":"The Broadband Activity Index","text":"function begins preprocessing audio signal: - DC Offset Removal: Eliminates constant bias signal - High-Pass Filtering: Optional filtering remove low-frequency noise (default 0 Hz, commonly set 500 Hz consistency)","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"spectrogram-generation","dir":"Articles","previous_headings":"Introduction > Step-by-Step Process","what":"2. Spectrogram Generation","title":"The Broadband Activity Index","text":"spectrogram created using spectrogram_cutoff() function : - Frequency Resolution: Determined freq.res parameter (default 50 Hz) - Noise Reduction: Row-wise noise reduction applied - Amplitude Cutoff: Values threshold (default -60 dBFS) removed - dBFS Conversion: Amplitude values converted decibels full-scale","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"click-detection-algorithm","dir":"Articles","previous_headings":"Introduction > Step-by-Step Process","what":"3. Click Detection Algorithm","title":"The Broadband Activity Index","text":"core detection algorithm works column-wise (time-frame time-frame) spectrogram: Calculate differences adjacent frequency bins Identify contiguous regions differences small Allow small gaps within clicks Keep regions longer minimum click length","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"key-detection-parameters","dir":"Articles","previous_headings":"Introduction > Step-by-Step Process > 3. Click Detection Algorithm","what":"Key Detection Parameters:","title":"The Broadband Activity Index","text":"difference: Maximum amplitude difference (dB) adjacent frequency bins considered part click (default 10 dB) click.length: Minimum length frequency bins valid click (default 10 bins) gap.allowance: Maximum gap size (frequency bins) allowed within single click (default 2 bins","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"click-characterization","dir":"Articles","previous_headings":"Introduction > Step-by-Step Process","what":"4. Click Characterization","title":"The Broadband Activity Index","text":"detected click, algorithm calculates: Height: Number frequency bins spanned Spectral Centroid: Frequency-weighted center click Temporal Position: Time frame location","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"frequency-band-analysis","dir":"Articles","previous_headings":"Introduction > Step-by-Step Process","what":"5. Frequency Band Analysis","title":"The Broadband Activity Index","text":"detected clicks analyzed within four frequency bands, following default ranges: Low-Frequency Activity (LFA): 0-2 kHz Mid-Frequency Activity (MFA): 2-8 kHz High-Frequency Activity (HFA): 8-15 kHz Ultra-Frequency Activity (UFA): 15-22 kHz","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"index-calculation","dir":"Articles","previous_headings":"Introduction > Step-by-Step Process","what":"6. Index Calculation","title":"The Broadband Activity Index","text":"final BBAI value percent spectrogram cells belong click:","code":"BBAI = (Total Click Cells / Total Spectrogram Cells) × 100"},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"usage-example","dir":"Articles","previous_headings":"","what":"Usage Example","title":"The Broadband Activity Index","text":"","code":"if (!require(\"RthopteraSounds\")) install.packages(\"RthopteraSounds\") library(RthopteraSounds)   library(Rthoptera) # Load example data  data(coryphoda)   # Basic usage  result <- broadband_activity2(coryphoda,                                freq.res = 100,                               cutoff = -50,                               spectrogram = TRUE,                                verbose = TRUE) ## Calculating Broadband Activity Index on the left channel...  ## Automatic window length: 960  ## Broadband Activity:  25.7  ## Low-frequency Activity (0 - 2 kHz): 1.1 % ## Mid-frequency Activity ( 2 - 8 kHz): 6.2 % ## High-frequency Activity ( 8 - 15 kHz): 32.1 % ## Ultra-frequency Activity ( 15 - 22 kHz): 42.7 % ## # A tibble: 1 × 17 ##   index channel value nclicks prop.clicks click.rate mean.length var.length ##   <chr> <chr>   <dbl>   <int>       <dbl>      <dbl>       <dbl>      <dbl> ## 1 bbai  left     25.7     118         1.3        134        91.9     11589. ## # ℹ 9 more variables: sd.length <dbl>, mean.centroid <dbl>, sd.centroid <dbl>, ## #   var.centroid <dbl>, mean.click.dist <dbl>, lfa <dbl>, mfa <dbl>, hfa <dbl>, ## #   ufa <dbl> # Advanced usage with custom frequency bands  result <- broadband_activity2(coryphoda,                                freq.res = 100,                               cutoff = -50,                               lf_roof = 1.5, # 0-1.5 kHz low freq                               mf_roof = 6,  # 1.5-6 kHz mid freq                                  hf_roof = 12, # 6-12 kHz high freq                                 uf_roof = 20,# 12-20 kHz ultra freq                                click.length = 15, # Longer minimum                               difference = 8,    # Stricter difference threshold                                      spectrogram = TRUE) ## Calculating Broadband Activity Index on the left channel...  ## Automatic window length: 960  ## Broadband Activity:  24.6  ## Low-frequency Activity (0 - 1.5 kHz): 1.1 % ## Mid-frequency Activity ( 1.5 - 6 kHz): 4.9 % ## High-frequency Activity ( 6 - 12 kHz): 18.4 % ## Ultra-frequency Activity ( 12 - 20 kHz): 40 % ## # A tibble: 1 × 17 ##   index channel value nclicks prop.clicks click.rate mean.length var.length ##   <chr> <chr>   <dbl>   <int>       <dbl>      <dbl>       <dbl>      <dbl> ## 1 bbai  left     24.6     103         1.2        117         101     10019. ## # ℹ 9 more variables: sd.length <dbl>, mean.centroid <dbl>, sd.centroid <dbl>, ## #   var.centroid <dbl>, mean.click.dist <dbl>, lfa <dbl>, mfa <dbl>, hfa <dbl>, ## #   ufa <dbl> # View results table  print(result$summary) ## # A tibble: 1 × 17 ##   index channel value nclicks prop.clicks click.rate mean.length var.length ##   <chr> <chr>   <dbl>   <int>       <dbl>      <dbl>       <dbl>      <dbl> ## 1 bbai  left     24.6     103         1.2        117         101     10019. ## # ℹ 9 more variables: sd.length <dbl>, mean.centroid <dbl>, sd.centroid <dbl>, ## #   var.centroid <dbl>, mean.click.dist <dbl>, lfa <dbl>, mfa <dbl>, hfa <dbl>, ## #   ufa <dbl>"},{"path":[]},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"core-identification-columns","dir":"Articles","previous_headings":"Output Column Explanations","what":"Core Identification Columns","title":"The Broadband Activity Index","text":"index: name index calculated. Always “bbai” (Broadband Activity Index). useful merging results acoustic indices. channel: Indicates audio channel analyzed (“left”, “right”, “mix”, “” stereo processing).","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"primary-activity-measures","dir":"Articles","previous_headings":"Output Column Explanations","what":"Primary Activity Measures","title":"The Broadband Activity Index","text":"value: main Broadband Activity Index value, expressed percentage. represents proportion spectrogram cells classified part “click” relative total number cells spectrogram. Higher values indicate broadband acoustic activity. nclicks: total number discrete clicks detected recording. click defined contiguous sequence frequency bins meet detection criteria (minimum length, amplitude difference thresholds, etc.).","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"temporal-distribution-measures","dir":"Articles","previous_headings":"Output Column Explanations","what":"Temporal Distribution Measures","title":"The Broadband Activity Index","text":"prop.clicks: proportion time frames contain least one click, expressed decimal (0-1). indicates temporally distributed clicks throughout recording. click.rate: rate click occurrence per second (clicks/second). provides temporal density measure acoustic activity. mean.click.dist: mean distance (time frames) consecutive clicks. helps characterize temporal clustering acoustic events.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"click-morphology-measures","dir":"Articles","previous_headings":"Output Column Explanations","what":"Click Morphology Measures","title":"The Broadband Activity Index","text":"mean.length: average length detected clicks, measured frequency bins. indicates typical frequency span broadband events. var.length: variance click lengths. High variance suggests clicks different frequency spans, low variance indicates uniform click sizes. sd.length: standard deviation click lengths. square root var.length provides interpretable measure click length variability.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"spectral-centroid-measures","dir":"Articles","previous_headings":"Output Column Explanations","what":"Spectral Centroid Measures","title":"The Broadband Activity Index","text":"mean.centroid: average spectral centroid detected clicks, expressed kHz. spectral centroid represents “center mass” frequency spectrum click, indicating acoustic energy concentrated. sd.centroid: standard deviation click centroids. measures much frequency center clicks varies across recording. var.centroid: variance click centroids. High values suggest clicks different spectral characteristics.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"frequency-band-activity-measures","dir":"Articles","previous_headings":"Output Column Explanations","what":"Frequency Band Activity Measures","title":"The Broadband Activity Index","text":"lfa (Low-Frequency Activity): percentage cells classified clicks low-frequency band (0 lf_roof kHz, default 0-2 kHz). captures activity lower portion frequency spectrum, often associated larger organisms environmental sounds. mfa (Mid-Frequency Activity): percentage cells classified clicks mid-frequency band (lf_roof mf_roof kHz, default 2-8 kHz). band often captures vocal activity many animals mechanical sounds. hfa (High-Frequency Activity): percentage cells classified clicks high-frequency band (mf_roof hf_roof kHz, default 8-15 kHz). range often includes insect activity, bird calls, higher-pitched mechanical sounds. ufa (Ultra-Frequency Activity): percentage cells classified clicks ultra-high frequency band (hf_roof uf_roof kHz, default 15-22 kHz). captures high-frequency sounds like ultrasonic insect calls, bat echolocation, high-frequency electronic noise. set NA hf_roof exceeds Nyquist frequency.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"stereo-processing-additional-columns","dir":"Articles","previous_headings":"Output Column Explanations","what":"Stereo Processing Additional Columns","title":"The Broadband Activity Index","text":"processing stereo recordings channel = \"\", function returns separate values left (_l) right (_r) channels, plus averaged values (_avg) measure: value_l, value_r, value_avg n_clicks_l, n_clicks_r, n_clicks_avg measures…","code":""},{"path":[]},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"default-thresholds","dir":"Articles","previous_headings":"Frequency Band Configuration","what":"Default Thresholds","title":"The Broadband Activity Index","text":"frequency bands defined threshold parameters: Low-Frequency Band (LFA): 0 kHz lf_roof (default 2 kHz) Mid-Frequency Band (MFA): lf_roof mf_roof (default 2-8 kHz) High-Frequency Band (HFA): mf_roof hf_roof (default 8-15 kHz) Ultra-Frequency Band (UFA): hf_roof uf_roof (default 15-22 kHz)","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"automatic-adjustments","dir":"Articles","previous_headings":"Frequency Band Configuration","what":"Automatic Adjustments","title":"The Broadband Activity Index","text":"function includes intelligent fallback logic: uf_roof Adjustment: uf_roof set higher Nyquist frequency (sampling rate ÷ 2), automatically adjusted Nyquist frequency prevent analysis beyond available frequency range. hf_roof Adjustment: hf_roof exceeds Nyquist frequency, adjusted Nyquist frequency, ufa set NA since ultra-frequency band available. Empty Bands: frequency band contains frequency bins (e.g., thresholds set inappropriately), corresponding activity measure 0.","code":""},{"path":[]},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"detection-sensitivity","dir":"Articles","previous_headings":"Parameter Tuning Guidelines","what":"Detection Sensitivity","title":"The Broadband Activity Index","text":"Increase click.length: Makes detection conservative (fewer, longer clicks) Decrease difference: Makes detection sensitive (detects subtler amplitude changes) Adjust cutoff: Lower values (negative) include quieter sounds","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"frequency-resolution-trade-offs","dir":"Articles","previous_headings":"Parameter Tuning Guidelines","what":"Frequency Resolution Trade-offs","title":"The Broadband Activity Index","text":"Lower freq.res: Better frequency resolution, longer processing time Higher freq.res: Faster processing, coarser frequency resolution","code":""},{"path":[]},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"activity-level-interpretation","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"Activity Level Interpretation","title":"The Broadband Activity Index","text":"BBAI < 1%: low broadband activity BBAI 1-5%: Low moderate activity BBAI 5-15%: High activity BBAI > 15%: high activity (may indicate noise equipment issues)","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"frequency-band-patterns","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"Frequency Band Patterns","title":"The Broadband Activity Index","text":"High LFA: Large organisms, wind noise, equipment noise High MFA: Crickets High HFA: Katydids High UFA: Ultrasonic insects, bats, electronic noise","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"morphological-indicators","dir":"Articles","previous_headings":"Interpretation Guidelines","what":"Morphological Indicators","title":"The Broadband Activity Index","text":"Large mean.length: Broadband events (impacts, broadband noises) High var.length: Diverse acoustic events High mean.centroid: Activity concentrated higher frequencies High click.rate: Frequent, brief acoustic events","code":""},{"path":[]},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"technical-limitations","dir":"Articles","previous_headings":"Limitations and Considerations","what":"Technical Limitations","title":"The Broadband Activity Index","text":"Sampling Rate Dependency: Higher sampling rates provide access ultrasonic frequencies Frequency Resolution Trade-: Better resolution requires longer processing time Amplitude Sensitivity: Performance depends appropriate cutoff thresholds","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"biological-considerations","dir":"Articles","previous_headings":"Limitations and Considerations","what":"Biological Considerations","title":"The Broadband Activity Index","text":"Species Specificity: Different organisms produce different acoustic signatures Environmental Noise: Background noise can inflate BBAI values Seasonal Variation: Activity patterns change environmental conditions","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"best-practices","dir":"Articles","previous_headings":"Limitations and Considerations","what":"Best Practices","title":"The Broadband Activity Index","text":"Consistent Parameters: Use identical parameters comparing recordings Quality Control: Monitor equipment-generated artifacts Validation: Cross-validate manual inspection spectrograms Documentation: Record parameter settings environmental conditions","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/BBAI.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"The Broadband Activity Index","text":"Broadband Activity Index provides powerful tool quantifying acoustic activity across multiple frequency bands. ability detect broadband “clicks” makes particularly valuable monitoring non-vocal organisms environmental disturbances. enhanced frequency band analysis allows researchers understand overall level acoustic activity also spectral distribution, providing deeper ecological insights. understanding underlying detection algorithm properly tuning parameters specific applications, researchers can effectively use BBAI wide range acoustic monitoring analysis tasks.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/Compare.html","id":"multi-software-manual-approaches","dir":"Articles","previous_headings":"","what":"Multi-software “manual” approaches","title":"Comparing Rthoptera with other workflows","text":"development Rthoptera, dissatisfied image output provided available bioacoustics software packages, authors used screenshots relevant views obtained closed-source software, mostly Adobe Audition (Adobe Inc., 2023). Obviously, conceived usage, screenshots need extensive manual refinements, require coordinated use closed-source software, usually include MS-Paint Adobe Photoshop. selection relevant portion audio file, bare minimum activities needed includes: Taking screenshot (.e., copying current screen content RAM image clipboard); Pasting screenshot image editing environment; Improving image clarity adjusting image levels (e.g., brightness, contrast, sharpness, etc.). post-production interventions needed may include image mode conversion (color black & white vice-versa) feature (e.g., grid lines) removal; Adding readable vertical horizontal axes, including tick marks, values labels: even though original screenshot may include information, -screen font size usually small readable. Furthermore, non-initial section audio file illustrated, -screen horizontal time scale start zero, complicates reading. reasons, suitably sized zeroed horizontal vertical scales need juxtaposed image, time-consuming process. Usually, Windows operating system, activity performed MS-Paint. average, obtaining image may require 10 20 minutes work (e.g., Brizio et al., 2021). raster images emerging process described sufficiently clear, drawbacks, including: Image content limited views available audio analysis software: usually, boils time/pressure envelopes, spectrograms mean spectra; Composite images (e.g. time/pressure envelopes different time scales, combination mean spectra spectrogram) obtained single step, require mosaic separately generated images; Images include data besides appearing image . data needed purpose publication, must obtained ways, typically manual transcription values read screen, often obtained suitably positioning mouse pointer, e.g. case reading pressure levels mean spectra (forgetting pixel-wise process pointer positioning inconsistent error-prone); Image style (e.g., color coding pressure levels) may vary one image another, depending software used screenshot generation. whole process described highly dependent skill, experience individual sensitivity operator, consistency results different operators fully granted. example Mean Power Spectrum extracted screenshot Adobe Audition post-processed Microsoft Paint Adobe Photoshop change color scale add new axes labels, requiring 10 minutes produce: plot type produced Rthoptera (using normalized amplitude instead dB FS), took 45 seconds produce, including selection file, changing scale parameters custom labels Y-axis, modifying output dimensions, typing species name song type.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/Compare.html","id":"raven-pro-1-6","dir":"Articles","previous_headings":"Multi-software “manual” approaches","what":"Raven Pro 1.6","title":"Comparing Rthoptera with other workflows","text":"NOTE: comparison used machine Windows 11 Home, 64 bit, 16 GB RAM. Raven Pro 1.6 (Cornell Lab Ornithology, 2021) dedicated bioacoustics software build scientists. Even free version Raven Lite offers suite useful tools acoustic analysis, extensively used researchers acoustic communication birds, anurans, bats, mammals. One disadvantage software proprietary nature, limiting user’s ability customize plots forcing rely extra software obtain desired results. plot shown took 70 seconds make Raven Pro 1.6, including un-checking position marker (wrongly shown many scientific publications), adjusting zoom level oscillogram, window size contrast spectrogram, finally changing grey scale Microsoft Office, allow control output dimensions either: output nice, far customizable, user can’t control output parameters either (e.g., image dimensions). knowledge, plots Raven separate views, allowing add Mean Power Spectrum aligned side spectrogram. wanted achieve output “multi-plot” Rthoptera, manually paste spectral plot side, requiring manual adjustment dimensions likely distort axes labels. consider iterating process many recordings, translates tedious endeavor. Rthoptera, final output can obtained 10 seconds without extra manual processing. First, load Waves RthopteraSounds package: , launch app multi_plot app following call: can modify parameters computing plot: exported image: Note R, warbleR package also allows extract spectral statistics automatically, requires importing selection tables Raven, makes process longer.","code":"library(Rthoptera)  # Load the sample recordings library(RthopteraSounds) data(\"coryphoda\")  data(\"tettigonia\") data(\"gryllus\") launch_app(\"multi_plot\")"},{"path":"https://naturewaves.github.io/Rthoptera/articles/Compare.html","id":"rthopteras-interactive-plots","dir":"Articles","previous_headings":"","what":"Rthoptera’s Interactive Plots","title":"Comparing Rthoptera with other workflows","text":"One main features package interactivity. Several functions apps produce interactive plots can saved HTML documents end users explore. examples obtain interactive plots using tettigonia Wave object RthopteraSounds: First, let’s make interactive oscillogram oscillogram_plotly function:  ancillary interactive spectrogram can obtained spectrogram_plotly() function. Note interactive spectrogram added mainly aid preprocessing (band-pass filtering) intended illustrating signal professional way (hence blueprint style): interactive Power Spectrum can obtained spectrum_plotly() function. plot shows black linear scale spectrum top grey dB scale spectrum:","code":"data(\"tettigonia\") # Interactive oscillogram (aka waveform) oscillogram_plotly(tettigonia) # Interactive spectrogram (aka sonogram) spectrogram_plotly(tettigonia) # Interactive mean power spectrum (aka PSD) spectrum_plotly(tettigonia)$plot"},{"path":"https://naturewaves.github.io/Rthoptera/articles/Compare.html","id":"rthopteras-temporal-metrics","dir":"Articles","previous_headings":"","what":"Rthoptera’s Temporal Metrics","title":"Comparing Rthoptera with other workflows","text":"importing preprocessing apps added just make life easier, core Rthoptera’s contribution insect biacoustics automatic detection characterization temporal units. playing around parameters, can specify measure, Rthoptera rest. available tools automatic measurement acoustic signals based simple amplitude threshold separate signal background noise. approach enough measure high-SNR recordings tonal songs, produced ground-, tree-, field-crickets. However, want measure broadband stridulations produced katydids bush-crickets, things consider. broad-band songs characterized transient-like “clicks”, often reflecting individual impacts stridulatory teeth scraper. neutral nomenclature, call sounds ‘peaks’. Researchers often interested measuring number peaks ‘pulse’ (.e., continuous train waves) , call , ‘train’. problem arises peaks faint measure threshold approach, falling threshold want filter reverberations signal. Rthoptera solves detecting local peaks user-defined parameters. song_stats_lq app (function) creates following outputs: • interactive plot showing individual peaks, trains, motifs, motif sequences (motif_seq = TRUE) well reporting summary statistics main measurements. • tabular dataset including: peak, train, motif, motif sequence measurements, summary table another table parameters used analysis. temporal measurements based peak detections. can use Plotly’s tools zoom-explore peak detections, especially fainter train. Note ‘Summary Statistics’ panel can toggled clicking text legend, true rest elements plot. train detection, spectral statistics calculated, can accessed train_data table. example, use console work function directly: Note element plot can toggled legend pane. plot can downloaded HTML ‘Export’ menu Rstudio’s viewer pane.  Now let’s inspect results output tables:   Coryphoda analysis perfect illustration Temporal Dynamic Excursion metrics song_stats_lq() function. used amplitude threshold approach, likely ignore first train, produced male opens tegmina (forewings). However, peak detection approach allows us capture faint sound packed information. Let’s focus “train_data” table: Fig. 12. Train Data table ‘results’ object. course, prefer, can use app:   Note Temporal Excursion (“tem.exc” column) much higher first train, also longest (“train.dur” column), highest number peaks (“n.peaks” column), faintest (“mean.amp” column), flattest terms energy, lowest Dynamic Excursion (“dyn.exc” column). opposite true almost metrics last train (closing stroke); shortest, lowest number peaks, loudest, greatest change amplitude (Dynamic Excursion). want analyze tonal, “high-Q” songs, produced crickets, instead use song_stats_hq() function. example, use gryllus Wave RthopteraSounds. also add another level aggregation leaving motif_seq = TRUE (Default) arguments: Note don’t assign function call new object (e.g., some_object <- song_stats_hq(gryllus)), output printed console, optimal many columns remain hidden.","code":"# Using a low detection threshold results <- song_stats_lq(coryphoda,                           detection_threshold = 0.01,                          motif_seq = FALSE) # Show the plot results$plot # Summary View(results$summary_data)  # Peaks View(results$peak_data)  # Trains View(results$train_data)  # Motifs View(results$motif_data)  # Parameters used View(results$params) launch_app(\"song_stats_lq\") # Use the song_stats_lq() function with a low detection threshold song_stats_hq(gryllus,                specimen_id = \"gryllus_001\") #optional  # Show the plot results$plot"},{"path":"https://naturewaves.github.io/Rthoptera/articles/Compare.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Comparing Rthoptera with other workflows","text":"Rthoptera capable improving efficiency effectiveness analysis insect signals: granting objective approach: user chooses parameter values, image plus data tables generation entirely consistently managed Rthoptera, excluding vagaries lengthy manual process impact different operators habits manual skills; granting advantage terms time required image generation: even though R RStudio especially suited bioacoustic analyses, worst-case scenario observed tests (100 seconds generation composite image Rthoptera) compares favorably 20 30 minutes required obtain comparable image screenshot-based process illustrated ; generating publication-ready plots, including composite illustrations (.e., “multiplot”) tedious time-consuming generate multi-software approach. simultaneously producing multiple tabular datasets diverse levels aggregation; providing new metrics (Pattern Complexity, Broadband Activity, Temporal Excursion, Dynamic Excursion, etc.) may set standard future investigations.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/Compare.html","id":"references","dir":"Articles","previous_headings":"Conclusions","what":"References","title":"Comparing Rthoptera with other workflows","text":"Adobe Inc. (2023). Adobe Audition (Version 23.0) [Computer software]. Adobe. https://www.adobe.com/products/audition.html Brizio, C.; Buzzetti, F.M.; Pavan, G. Beyond audible: Wide band (0-125 kHz) field investigation Italian Orthoptera (Insecta) songs. Biodivers. J. 2020, 11, 443–496. https://doi.org/10.31396/Biodiv.Jour.2020.11.2.443.496. Cornell Lab Ornithology. (2021). Raven Pro: Interactive sound analysis software (Version 1.6) [Computer software]. https://ravensoundsoftware.com/","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/Preprocess.html","id":"trim","dir":"Articles","previous_headings":"","what":"Trim","title":"Preprocessing Audio with Rthoptera","text":"app works tuneR’s extractWave() function, interactive option accurate selection snippets. trim Wave, run app, plot oscillogram, select portion want save, type name , save . can overwrite original Wave assigning name selection (effect outside R environment), assign new name create new Wave object.want save several snippets length, just drag first selection desired position assign new name saving.  downsampling band-passing examples, use included “platycleis” Wave, recording Platycleis grisea made Cesare Brizio Italy.","code":"launch_app(\"trim\")"},{"path":"https://naturewaves.github.io/Rthoptera/articles/Preprocess.html","id":"downsample","dir":"Articles","previous_headings":"","what":"Downsample","title":"Preprocessing Audio with Rthoptera","text":"app based seewave’s resamp() function. think sampling rate used record insect unnecessarily high, use app verify downsample appropriate. design, minimum Nyquist allowed Rthoptera 48 kHz. two options 96 kHz, 125 kHz. crickets, 48 kHz Nyquist suffice, caution must applied. app launched, select Wave want analyze click “Plot”.Now can assess maximum frequency interest (MaxFOI) hovering Mean Power Spectrum. MaxFOI less half Nyquist (maximum visible frequency plot), can consider downsampling. Select closest available value MaxFOI click “Downsample”.","code":"launch_app(\"downsample\")"},{"path":"https://naturewaves.github.io/Rthoptera/articles/Preprocess.html","id":"band-pass-filter","dir":"Articles","previous_headings":"","what":"Band-pass Filter","title":"Preprocessing Audio with Rthoptera","text":"app based seewave’s fir() (Finite Impulse Response Filter) function. believe recording low-frequency noise non-target (e.g., species) sounds, consider applying band-pass filter (BPF) bandpass_filter app. app allows verify presence non-target sound range, helping choose appropriate BPF. Mean Power Spectrum view used determine whether non-target sound noise -20dB threshold typically employed assess bandwidth signal interest (SOI). non-target sound detected, user choose proper combination high-pass filter low-pass filter values significantly attenuate sounds threshold, allowing accurate measure plot SOI. Although takes longer render, spectrogram view may necessary field recordings multiple species detected, allows visual discrimination SOI non-target signals inspecting temporal patterns, visible mean power spectrum.","code":"launch_app(\"bandpass_filter\")"},{"path":"https://naturewaves.github.io/Rthoptera/articles/Rthoptera.html","id":"preprocessing","dir":"Articles","previous_headings":"","what":"Preprocessing","title":"Rthoptera","text":"Please visit Preprocess page guidance use tools. Import: Browse local data import audio files (WAV) Wave objects R. process, waveform centered zero rmoffset() function ensure accurate measurements. Downsample: required appropriate, can reduce sampling rate audio files. helps improve computing speed certain analyses plots without losing important sound features. Band-pass Filter: necessary, apply user-defined high-pass /low-pass filter eliminate noise non-target sounds audio recordings. Trim: Using interactive oscillogram, can visually select trim specific sections Wave object. trimmed sections can saved new Wave objects R environment analysis. Merge: Useful one needs concatenate several wave files together certain analyses.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/Rthoptera.html","id":"analysis","dir":"Articles","previous_headings":"","what":"Analysis","title":"Rthoptera","text":"preprocessing complete, users can launch analysis tools extract spectral temporal statistics audio files: Spectral Statistics: Automatically calculate spectral metrics based mean power spectrum Wave object. Temporal Statistics: Automatically extract temporal metrics audio recordings. includes identifying analyzing elements (“tooth impacts”), trains (syllables), echemes (groups syllables trills) insect sounds. Two apps available: call_stats_hq optimized work “tonal” (.e., “high-Q”) signals, produced crickets. creates envelope waveform measures duration trains (.e., “pulses”) gaps based user-defined detection threshold, aggregating motifs (.e., “echemes”) , optionally, motif sequences. call_stats_lq works better broadband calls usually produced katydids, bush-crickets, water-bugs, etc, including wide amplitude variability, threshold approach leave fainter sounds undetected poorly measured. main difference “hq” app granularity: app detects peak envelope, often corresponding single tooth impact, groups trains (e.g., “pulses”, “syllables”), motifs (e.g., “echemes”), motif sequences using user-defined thresholds.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/Rthoptera.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"Rthoptera","text":"Multi-Power Spectrum: interactive tool overlays multiple power spectrum plots selected oscillogram, allowing easy comparison visualization spectral features across different time intervals. selection assigned color (colorblind-safe) oscillogram mean spectrum plots. Spectrogram: Generate standard spectrograms, optionally alongside lateral mean power spectrum. combination allows visualize time-frequency representations overall spectral distribution. spectrogram window size automatically adjusted based sampling rate duration recording obtain standard frequency/time resolution trade-. Multi Plot: combined visualization spectrogram, mean spectrum, oscillogram, providing comprehensive view time-domain frequency-domain characteristics insect sounds. Oscillogram: Create standard oscillograms well interactive oscillograms allow zoom explore specific sections waveform. Multi-oscillogram: Create stacked oscillogram plot 0comparing sounds multiple species. particularly useful analyzing differences acoustic patterns species. Zoomed oscillogram: Create static oscillogram stacked zoomed portions selected interactively.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/articles/Summarize.html","id":"getting-summary-data-for-specific-trains-across-motifs","dir":"Articles","previous_headings":"","what":"Getting summary data for specific trains across motifs","title":"Summarizing Data with Rthoptera","text":"use song_stats functions extract temporal spectral statistics, summary output include summaries individual “train ids” number train per motif variable species. However, can easily summarize using lines code. example, work gryllus object RthopteraSounds package. loading data, run song_stats_hq function optimized tonal calls, storing output function local environment: Next, group train data “train.id”, summarize reframe() function dplyr package, calculating mean. can use pipe operator (left-pointing triangle) Ctrl+Shift_M Windows Cmd+Shift+M Mac:","code":"# Load packages and data library(Rthoptera) library(RthopteraSounds) data(gryllus)  # Store the results in the R environment results <- song_stats_hq(gryllus) results$train_data |>    group_by(train.id) |> # group the trains by their identity within a motif   reframe(mean(peak.freq)) # get the mean per \"train.id\""},{"path":"https://naturewaves.github.io/Rthoptera/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francisco Rivas. Maintainer.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rivas F, Brizio C, Buzzetti FM, Pijanowski B (2025). Rthoptera: Standardized Insect Bioacoustics. R package version 1.0.3, https://github.com/naturewaves/Rthoptera.","code":"@Manual{,   title = {Rthoptera: Standardized Insect Bioacoustics},   author = {Francisco Rivas and Cesare Brizio and Filippo Maria Buzzetti and Bryan Pijanowski},   year = {2025},   note = {R package version 1.0.3},   url = {https://github.com/naturewaves/Rthoptera}, }"},{"path":"https://naturewaves.github.io/Rthoptera/index.html","id":"rthoptera-","dir":"","previous_headings":"","what":"Standardized Insect Bioacoustics","title":"Standardized Insect Bioacoustics","text":"Rthoptera provides interactive Shiny applications standard analysis insect sounds. package intended used high signal--noise recordings, helping researchers make standardized measurements plots support scientific description “acoustic type”. define “acoustic type” first description calling song species, accompanied high-quality recording catalog number voucher specimen. convenience users, included functions pre-processing audio files, already available packages (e.g., tuneR, seewave), interactive (Shiny apps). plotting functions based seewave package, convenience presets automatic parameter selection (e.g., window length spectrograms) ensure clarity Wave regardless recording settings. plots also interactive versions can saved HTML documents.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/index.html","id":"preprocessing","dir":"","previous_headings":"","what":"Preprocessing","title":"Standardized Insect Bioacoustics","text":"Please visit Preprocess page guidance use tools. Import: Browse local data import audio files (WAV) Wave objects R. process, waveform centered zero rmoffset() function ensure accurate measurements. Downsample: required appropriate, can reduce sampling rate audio files. helps improve computing speed certain analyses plots without losing important sound features. Band-pass Filter: necessary, apply user-defined high-pass /low-pass filter eliminate noise non-target sounds audio recordings. Trim: Using interactive oscillogram, can visually select trim specific sections Wave object. trimmed sections can saved new Wave objects R environment analysis. Merge: Useful one needs concatenate several wave files together certain analyses.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/index.html","id":"analysis","dir":"","previous_headings":"","what":"Analysis","title":"Standardized Insect Bioacoustics","text":"preprocessing complete, users can launch analysis tools extract spectral temporal statistics audio files: Spectral Statistics: Automatically calculate spectral metrics based mean power spectrum Wave object. Temporal Statistics: Automatically extract temporal metrics audio recordings. includes identifying analyzing elements (“tooth impacts”), trains (syllables), echemes (groups syllables trills) insect sounds. Two apps available: song_stats_hq optimized work “tonal” (.e., “high-Q”) signals, produced crickets. creates envelope waveform measures duration trains (.e., “pulses”) gaps based user-defined detection threshold, aggregating motifs (.e., “echemes”) , optionally, motif sequences. function calculates spectral metrics detected train. song_stats_lq ideal obtain fine temporal metrics high signal--noise ratio recordings broadband calls usually produced katydids, bush-crickets, water-bugs, etc, including wide amplitude variability, threshold approach leave fainter sounds undetected poorly measured. main difference “hq” app granularity: app detects peak envelope, often corresponding single tooth impact, groups trains (e.g., “pulses”, “syllables”), motifs (e.g., “echemes”), motif sequences using user-defined thresholds. function also calculates spectral metrics detected train.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/index.html","id":"visualisation","dir":"","previous_headings":"","what":"Visualisation","title":"Standardized Insect Bioacoustics","text":"Multi-Power Spectrum: interactive tool overlays multiple power spectrum plots selected oscillogram, allowing easy comparison visualization spectral features across different time intervals. selection assigned color (colorblind-safe) oscillogram mean spectrum plots. Spectrogram: Generate standard spectrograms, optionally alongside lateral mean power spectrum. combination allows visualize time-frequency representations overall spectral distribution. spectrogram window size automatically adjusted based sampling rate duration recording obtain standard frequency/time resolution trade-. Multi Plot: combined visualization spectrogram, mean spectrum, oscillogram, providing comprehensive view time-domain frequency-domain characteristics insect sounds. Oscillogram: Create standard oscillograms well interactive oscillograms allow zoom explore specific sections waveform. Multi-oscillogram: Create stacked oscillogram plot 0comparing sounds multiple species. particularly useful analyzing differences acoustic patterns species. Zoomed oscillogram: Create static oscillogram stacked zoomed portions selected interactively.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Standardized Insect Bioacoustics","text":"install Rthoptera package, follow steps: Install remotes package haven’t already: Load remotes package: Install Rthoptera GitHub: Load Rthoptera package:","code":"install.packages(\"remotes\") library(remotes) remotes::install_github(\"naturewaves/Rthoptera\") library(Rthoptera)"},{"path":"https://naturewaves.github.io/Rthoptera/reference/audioplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast Spectrogram with Derived Pseudo-Oscillogram and Power Spectrum — audioplot","title":"Fast Spectrogram with Derived Pseudo-Oscillogram and Power Spectrum — audioplot","text":"Fast Spectrogram Derived Pseudo-Oscillogram Power Spectrum","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/audioplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast Spectrogram with Derived Pseudo-Oscillogram and Power Spectrum — audioplot","text":"","code":"audioplot(   wave,   fft = \"auto\",   enhance = \"time\",   overlap = 75,   window = \"hann\",   contrast = 60,   flim = NULL,   tlim = NULL,   zero.pad = 8,   output.file = NULL,   plot.title = \"\",   use.ragg = TRUE,   palette = \"inferno\",   osc.show = TRUE,   osc.color = \"black\",   osc.height = 0.25,   spec.show = TRUE,   spec.fun = \"mean\",   spec.color = \"black\",   spec.width = 0.15,   spec.linear = TRUE )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/audioplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast Spectrogram with Derived Pseudo-Oscillogram and Power Spectrum — audioplot","text":"wave Wave object tuneR package fft Size FFT window (must power 2). Default \"auto\", automatically calculates proper length (see q.factor options). enhance Either 'freq' prioritize frequency resolution 'time' prioritize temporal resolution. overlap Overlap windows (0 95%) window Type window function (\"hann\", \"hamming\", \"blackman\") contrast Controls dynamic range visualization (0-100%) flim Numeric list length 2. Frequency limits, kHz. zero.pad Zero-padding factor output.file Optional file path save spectrogram plot.title Plot title use.ragg Whether use RAGG GPU-accelerated rendering palette Color palette spectrogram osc.show Whether show oscillogram osc.color Color pseudo-oscillogram osc.height Relative height oscillogram (0-1) spec.show Whether show power spectrum spec.color Color power spectrum. spec.width Relative width power spectrum (0-1) spec.linear Whether show power spectrum linear scale. Default TRUE.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/audioplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast Spectrogram with Derived Pseudo-Oscillogram and Power Spectrum — audioplot","text":"Invisible list containing spectrogram data","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/audioplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast Spectrogram with Derived Pseudo-Oscillogram and Power Spectrum — audioplot","text":"fft set 'auto' (recommended), function takes 'enhance' argument decide whether enhance spectral temporal resolution. recommend \"enhance= 'freq'\" high-quality factor (.e., 'tonal') sounds produced crickets, \"enhance='time\" low-quality factor (.e., 'raspy') sounds produced katydids cicadas.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/audioplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast Spectrogram with Derived Pseudo-Oscillogram and Power Spectrum — audioplot","text":"","code":"if (FALSE) { # \\dontrun{ library(RthopteraSounds) data(\"coryphoda\") data(\"gryllus\") audioplot(coryphoda, enhance = \"time\", osc.show = F, palette = 'Zissou 1') audioplot(coryphoda, enhance = 'time', osc.show = F, spec.linear = T) # great audioplot(coryphoda, enhance = \"time\") audioplot(gryllus, enhance = \"freq\") audioplot(gryllus, enhance = \"time\")} # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/batch_song_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply song_stats functions to Wave Objects in Parallel — batch_song_stats","title":"Apply song_stats functions to Wave Objects in Parallel — batch_song_stats","text":"Processes multiple Wave objects parallel using song_stats_lq(), suppresses plots, combines results structured list tables.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/batch_song_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply song_stats functions to Wave Objects in Parallel — batch_song_stats","text":"","code":"batch_song_stats(wave_objects, cores = NULL, q, ...)"},{"path":"https://naturewaves.github.io/Rthoptera/reference/batch_song_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply song_stats functions to Wave Objects in Parallel — batch_song_stats","text":"wave_objects list Wave objects character vector object names. cores Number CPU cores use (default: parallel::detectCores() - 1). q Character. Either \"low\" use song_stats_lq() function \"high\" call song_stats_hq() function. ... Additional arguments passed song_stats_lq() song_stats_hq().","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/batch_song_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply song_stats functions to Wave Objects in Parallel — batch_song_stats","text":"list merged tibbles (one per output table).","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/batch_song_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply song_stats functions to Wave Objects in Parallel — batch_song_stats","text":"","code":"if (FALSE) { # \\dontrun{ library(tuneR) wave1 <- sine(440) wave2 <- noise() results <- parallel_song_stats(c(\"wave1\", \"wave2\"), cores = 2) } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/broadband_activity.html","id":null,"dir":"Reference","previous_headings":"","what":"Broadband Activity Index — broadband_activity","title":"Broadband Activity Index — broadband_activity","text":"function processes audio signal detect broadband activity identifying 'clicks' based time-frame-wise (.e., column-wise) amplitude changes spectrogram. computes statistics related click height, variance, centroid frequency, can plot spectrogram detected clicks highlighted. Included package explore potential monitoring activity non-stridulating pests stored food wood. function obtains non-normalized spectrogram seewave's spectro() using row-wise noise reduction procedure transforms amplitude values decibels full-scale (dBFS).","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/broadband_activity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Broadband Activity Index — broadband_activity","text":"","code":"broadband_activity(   wave,   channel = \"left\",   hpf = 0,   rm.offset = TRUE,   freq.res = 50,   cutoff = -60,   click.length = 10,   difference = 10,   gap.allowance = 2,   spectrogram = FALSE,   dark.plot = FALSE,   plot.title = NULL,   verbose = TRUE )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/broadband_activity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Broadband Activity Index — broadband_activity","text":"wave Wave object containing audio signal analyzed. channel Character. Wave stereo want use one channel, pass either \"left\" \"right\" argument. want analyze mix channels, select \"mix\". NULL (default), results returned channel. hpf Numeric. High-pass filter. default (500 Hz) used always consistency unless signals interest threshold. rm.offset Logical. DC offset removed audio signal? Defaults TRUE. freq.res Numeric. Frequency resolution Hz. value determines \"height\" frequency bin , therefore, window length used (sampling rate / frequency resolution). cutoff Numeric. amplitude threshold (dBFS) removing low-amplitude values spectrogram. Default -50. click.length Numeric. minimum length (frequency bins) detected click kept. Default 10. difference Numeric. maximum difference amplitude adjacent frequency bins considered part single 'click'. Default 20. gap.allowance Numeric. size gaps (frequency bins) allowed contiguous parts click. Default 2. Gaps larger value split clicks. spectrogram Logical. spectrogram highlighted clicks plotted? Default TRUE. dark.plot Logical. plot use dark theme (black background)? Default FALSE. plot.title Character. title plot, plot TRUE. Default NULL. verbose Logical. TRUE, details dynamic range printed console.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/broadband_activity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Broadband Activity Index — broadband_activity","text":"tibble containing following columns: index: name index. Useful later merging data indices. value: number clicks detected recording. mean: mean click height (frequency bins). variance: variance click height. sd: standard deviation click height.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/broadband_activity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Broadband Activity Index — broadband_activity","text":"","code":"if (FALSE) { # \\dontrun{ library(RthopteraSounds) data(coryphoda) broadband_activity(coryphoda) } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/broadband_activity2.html","id":null,"dir":"Reference","previous_headings":"","what":"Broadband Activity Index V2 — broadband_activity2","title":"Broadband Activity Index V2 — broadband_activity2","text":"function processes audio signal detect broadband activity identifying 'clicks' based time-frame-wise (.e., column-wise) amplitude changes spectrogram. computes statistics related click height, variance, centroid frequency, can plot spectrogram detected clicks highlighted. Included package explore potential monitoring activity non-stridulating pests stored food wood. function obtains non-normalized spectrogram seewave's spectro() using row-wise noise reduction procedure transforms amplitude values decibels full-scale (dBFS).","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/broadband_activity2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Broadband Activity Index V2 — broadband_activity2","text":"","code":"broadband_activity2(   wave,   channel = \"left\",   hpf = 0,   rm.offset = TRUE,   freq.res = 50,   cutoff = -60,   click.length = 10,   difference = 10,   gap.allowance = 2,   lf_roof = 2,   mf_roof = 8,   hf_roof = 15,   uf_roof = 22,   spectrogram = FALSE,   dark.plot = FALSE,   plot.title = NULL,   verbose = TRUE )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/broadband_activity2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Broadband Activity Index V2 — broadband_activity2","text":"wave Wave object containing audio signal analyzed. channel Character. Wave stereo want use one channel, pass either \"left\" \"right\" argument. want analyze mix channels, select \"mix\". NULL (default), results returned channel. hpf Numeric. High-pass filter. default (500 Hz) used always consistency unless signals interest threshold. rm.offset Logical. DC offset removed audio signal? Defaults TRUE. freq.res Numeric. Frequency resolution Hz. value determines \"height\" frequency bin , therefore, window length used (sampling rate / frequency resolution). cutoff Numeric. amplitude threshold (dBFS) removing low-amplitude values spectrogram. Default -50. click.length Numeric. minimum length (frequency bins) detected click kept. Default 10. difference Numeric. maximum difference amplitude adjacent frequency bins considered part single 'click'. Default 20. gap.allowance Numeric. size gaps (frequency bins) allowed contiguous parts click. Default 2. Gaps larger value split clicks. lf_roof Numeric. Maximum frequency threshold (kHz) low-frequency activity (lfa). Default 2 kHz. Floor hard-coded 0 kHz. mf_roof Numeric. Maximum frequency threshold (kHz) mid-frequency activity (mfa). Default 8 kHz. Floor lf_roof. hf_roof Numeric. Maximum frequency threshold (kHz) high-frequency activity (hfa). Default 15 kHz. Floor mf_roof. uf_roof Numeric. Maximum frequency threshold (kHz) ultra-frequency activity (ufa). Default 22 kHz. Floor hf_roof. Automatically adjusted Nyquist frequency set higher. spectrogram Logical. spectrogram highlighted clicks plotted? Default TRUE. dark.plot Logical. plot use dark theme (black background)? Default FALSE. plot.title Character. title plot, plot TRUE. Default NULL. verbose Logical. TRUE, details dynamic range printed console.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/broadband_activity2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Broadband Activity Index V2 — broadband_activity2","text":"tibble containing following columns: index: name index. Useful later merging data indices. value: number clicks detected recording. mean: mean click height (frequency bins). variance: variance click height. sd: standard deviation click height.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/broadband_activity2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Broadband Activity Index V2 — broadband_activity2","text":"","code":"if (FALSE) { # \\dontrun{ library(RthopteraSounds) data(coryphoda) broadband_activity(coryphoda) } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/clean_wave.html","id":null,"dir":"Reference","previous_headings":"","what":"Denoise a Wave for temporal measurements — clean_wave","title":"Denoise a Wave for temporal measurements — clean_wave","text":"Denoise Wave temporal measurements","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/clean_wave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Denoise a Wave for temporal measurements — clean_wave","text":"","code":"clean_wave(   wave,   filter = \"fir\",   min = NULL,   max = NULL,   gate = 0.05,   oscillo = TRUE )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/clean_wave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Denoise a Wave for temporal measurements — clean_wave","text":"wave Wave object. filter Character. Select bandpass filter. Options 'fir' (Finite Impulse Response);'bwf' (Butterworth); 'freq' (Frequency filter). min Numeric. minimum frequency bandpass filter. max Numeric. maximum frequency bandpass filter. gate Numeric (double). proportion maximum amplitude use threshold noise gate. values threshold clipped zero. oscillo Logical. TRUE (default), simple oscillogram output wave plotted.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/clean_wave.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Denoise a Wave for temporal measurements — clean_wave","text":"Wave object","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/clean_wave.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Denoise a Wave for temporal measurements — clean_wave","text":"function developed preprocessing step temporal measurements . conduct spectral analysis objects returned function.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/clean_wave.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Denoise a Wave for temporal measurements — clean_wave","text":"","code":"if (FALSE) { # \\dontrun{ library(RthopteraSounds) data(Coryphoda) clean_wave(Coryphoda) } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/export_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Data Frames and HTML Widgets from a List — export_stats","title":"Export Data Frames and HTML Widgets from a List — export_stats","text":"function exports data frames list Excel file (one sheet per data frame) HTML widgets (e.g., plotly, leaflet) self-contained HTML file.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/export_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Data Frames and HTML Widgets from a List — export_stats","text":"","code":"export_stats(list_name, output_name, path)"},{"path":"https://naturewaves.github.io/Rthoptera/reference/export_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Data Frames and HTML Widgets from a List — export_stats","text":"list_name named list containing data frames /HTML widget objects output_name Base name output files (without extension). function create two files: output_name.xlsx output_name.html.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/export_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Data Frames and HTML Widgets from a List — export_stats","text":"Invisible NULL. function primarily produces files side effects: - Excel file containing data frames (exist) - HTML file containing widget (exists) - Messages indicating files created","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/export_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export Data Frames and HTML Widgets from a List — export_stats","text":"function handles special characters data frame names removing creating Excel sheets. HTML widgets saved self-contained files (external dependencies) using htmlwidgets::saveWidget().","code":""},{"path":[]},{"path":"https://naturewaves.github.io/Rthoptera/reference/get_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mode(s) of a vector — get_mode","title":"Calculate the mode(s) of a vector — get_mode","text":"Calculate mode(s) vector","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/get_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mode(s) of a vector — get_mode","text":"","code":"get_mode(x, na.rm = TRUE)"},{"path":"https://naturewaves.github.io/Rthoptera/reference/get_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mode(s) of a vector — get_mode","text":"x vector (numeric, character, factor, etc.) na.rm Logical indicating whether remove NA values (default: TRUE)","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/get_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mode(s) of a vector — get_mode","text":"vector containing mode(s). multiple modes exist, returns . Returns NA input empty values NA (na.rm = TRUE).","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/get_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mode(s) of a vector — get_mode","text":"","code":"get_mode(c(1, 2, 2, 3, 3, 4))  # Returns c(2, 3) #> [1] 2 3 get_mode(c(\"a\", \"b\", \"b\", \"c\")) # Returns \"b\" #> [1] \"b\" get_mode(rep(NA, 5))            # Returns NA #> [1] NA"},{"path":"https://naturewaves.github.io/Rthoptera/reference/launch_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch a Shiny App from the package — launch_app","title":"Launch a Shiny App from the package — launch_app","text":"Launch Shiny App package","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/launch_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch a Shiny App from the package — launch_app","text":"","code":"launch_app(app_name = NULL)"},{"path":"https://naturewaves.github.io/Rthoptera/reference/launch_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch a Shiny App from the package — launch_app","text":"app_name (partial full) name Shiny app. NULL, lists available apps.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/launch_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch a Shiny App from the package — launch_app","text":"Launches Shiny app lists available apps name provided","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/list_waves.html","id":null,"dir":"Reference","previous_headings":"","what":"List wave files in a directory — list_waves","title":"List wave files in a directory — list_waves","text":"List wave files directory","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/list_waves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List wave files in a directory — list_waves","text":"","code":"list_waves(folder = NULL, recursive = FALSE)"},{"path":"https://naturewaves.github.io/Rthoptera/reference/list_waves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List wave files in a directory — list_waves","text":"folder Character. path folder WAV files stored. recursive Logical. Whether search subfolders.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/list_waves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List wave files in a directory — list_waves","text":"list wave files","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/list_waves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List wave files in a directory — list_waves","text":"","code":"if (FALSE) { # \\dontrun{ list_waves() } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/meanspectrum_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Mean Spectrum — meanspectrum_plotly","title":"Interactive Mean Spectrum — meanspectrum_plotly","text":"Interactive Mean Spectrum","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/meanspectrum_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Mean Spectrum — meanspectrum_plotly","text":"","code":"meanspectrum_plotly(   wave,   background = \"#274C77\",   foreground = \"white\",   hover_bgcolor = \"white\",   hover_fontcolor = \"black\" )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/meanspectrum_plotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive Mean Spectrum — meanspectrum_plotly","text":"wave Wave object. background Background color. foreground Color plot lines spectral signatures. hover_bgcolor Color hover background. hover_fontcolor Color hover text.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/meanspectrum_plotly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive Mean Spectrum — meanspectrum_plotly","text":"interactive Mean Spectrum","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/meanspectrum_plotly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive Mean Spectrum — meanspectrum_plotly","text":"","code":"if (FALSE) { # \\dontrun{ data(coryphoda) meanspectrum_plotly(coryphoda) } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/multiplot_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplot including Spectrogram, Mean Power Spectrum, and — multiplot_ggplot","title":"Multiplot including Spectrogram, Mean Power Spectrum, and — multiplot_ggplot","text":"Multiplot including Spectrogram, Mean Power Spectrum, ","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/multiplot_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplot including Spectrogram, Mean Power Spectrum, and — multiplot_ggplot","text":"","code":"multiplot_ggplot(   wave,   cutoff = -35,   overlap = 95,   zeropad = 200,   scale_type = \"dB\",   heights = c(7, 3),   oscillo_label = \"\" )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/multiplot_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiplot including Spectrogram, Mean Power Spectrum, and — multiplot_ggplot","text":"wave Wave object. sound data plotted. cutoff Numeric. Amplitude cutoff dB peak. Values cutoff visible spectrogram. Default -35 dB. overlap Numeric. Window overlap percentage spectrogram. Default 95. zeropad Numeric. Zero padding FFT spectrogram. Default 200. scale_type Character. Scale amplitude spectrogram, either \"dB\" \"Linear\". Default \"dB\". heights Numeric vector. relative heights spectrogram/mean spectrum plot oscillogram. Default c(7,3). oscillo_label Character. title Y-axis oscillogram. Default empty string.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/multiplot_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiplot including Spectrogram, Mean Power Spectrum, and — multiplot_ggplot","text":"plot aligned spectrogram, mean spectrum, oscillogram.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/multiplot_ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiplot including Spectrogram, Mean Power Spectrum, and — multiplot_ggplot","text":"","code":"if (FALSE) { # \\dontrun{ data(coryphoda) multiplot_ggplot(coryphoda) } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/oscillogram_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Oscillogram with ggplot2 — oscillogram_ggplot","title":"Oscillogram with ggplot2 — oscillogram_ggplot","text":"Oscillogram ggplot2","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/oscillogram_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Oscillogram with ggplot2 — oscillogram_ggplot","text":"","code":"oscillogram_ggplot(   wave,   y_title = \"Relative Amplitude\",   x_title = \"\",   save = TRUE,   file_name = \"\",   show_x = TRUE )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/oscillogram_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Oscillogram with ggplot2 — oscillogram_ggplot","text":"wave Wave object y_title Character. title Y-axis. x_title Character. title X-axis. save Logical. TRUE, plot saved working directory. Defaults FALSE. file_name Character. Name PNG file saved. suffix (\"_oscillogram\") added default. show_x Logical. TRUE (default), X-axis plotted.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/oscillogram_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Oscillogram with ggplot2 — oscillogram_ggplot","text":"oscillogram plot. plot meant used plots matching X-axis, therefore lacks labels.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/oscillogram_ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Oscillogram with ggplot2 — oscillogram_ggplot","text":"","code":"if (FALSE) { # \\dontrun{ oscillgoram_ggplot(coryphoda) } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/oscillogram_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Oscillogram — oscillogram_plotly","title":"Interactive Oscillogram — oscillogram_plotly","text":"function generates interactive oscillogram plot given Wave object using Plotly.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/oscillogram_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Oscillogram — oscillogram_plotly","text":"","code":"oscillogram_plotly(wave, title = \"\", line_color = \"black\")"},{"path":"https://naturewaves.github.io/Rthoptera/reference/oscillogram_plotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive Oscillogram — oscillogram_plotly","text":"wave wave object containing audio data plotted. title string specifying title plot. Default empty string. line_color string specifying color waveform line. Default 'black'.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/oscillogram_plotly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive Oscillogram — oscillogram_plotly","text":"Plotly object representing interactive oscillogram.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/oscillogram_plotly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive Oscillogram — oscillogram_plotly","text":"","code":"if (FALSE) { # \\dontrun{ oscillogram_plotly(coryphoda_wave, title = \"Coryphoda albidicollis\") } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/Rthoptera-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Rthoptera: Standardized Insect Bioacoustics — Rthoptera-package","title":"Rthoptera: Standardized Insect Bioacoustics — Rthoptera-package","text":"package provides functions Shiny Apps analyze insect acoustic signals, including preprocessing (e.g., high-pass filter, remove DC offset, -sampling, etc.). Analytical functions allow user automatically extract relevant acoustic features spectral temporal dimensions.","code":""},{"path":[]},{"path":"https://naturewaves.github.io/Rthoptera/reference/song_stats_hq.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporal and Spectral Statistics for HQ (Narrow-band) Songs — song_stats_hq","title":"Temporal and Spectral Statistics for HQ (Narrow-band) Songs — song_stats_hq","text":"function detects trains envelope Wave, groups hierarchical structures (.e. motifs, motif sequences), saves suite temporal spectral metrics detection several tables. interactive plot visualizes results, showing envelope signal, detected trains, motifs, key statistics. plot can downloaded HTML (interactive) PNG (static) file.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/song_stats_hq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporal and Spectral Statistics for HQ (Narrow-band) Songs — song_stats_hq","text":"","code":"song_stats_hq(   wave,   specimen_id = \"\",   msmooth_window = 100,   msmooth_overlap = 50,   upper_detection_threshold = 0.2,   lower_detection_threshold = 0.15,   min_train_dur = 0.002,   max_train_gap = 0.3,   motif_seq = TRUE,   max_motif_gap = 0.8,   norm_env = TRUE,   db_threshold = 20 )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/song_stats_hq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporal and Spectral Statistics for HQ (Narrow-band) Songs — song_stats_hq","text":"wave Wave object. specimen_id character string representing specimen identifier. msmooth_window integer specifying window size (milliseconds) smoothing envelope (default: 100). msmooth_overlap integer specifying overlap (%) smoothing envelope. Default = 50. upper_detection_threshold numeric value representing upper amplitude detection threshold Default = 0.2. lower_detection_threshold numeric value representing lower amplitude detection threshold Default = 0.1. min_train_dur numeric value specifying minimum duration (seconds) valid amplitude train. Default = 0.002. max_train_gap numeric value representing maximum gap (seconds) allowed two trains considering part different motifs. Default = 0.08. motif_seq Logical. TRUE, add first-order aggregation motifs. Default value FALSE. max_motif_gap Numeric. Maximum allowed gap (seconds) motifs consider part sequence. @param norm_env logical indicating whether normalize envelope Default = TRUE.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/song_stats_hq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporal and Spectral Statistics for HQ (Narrow-band) Songs — song_stats_hq","text":"list following components: plot interactive plotly plot showing signal envelope, detected trains, motifs. summary_data tibble summary statistics acoustic motifs. train_data tibble details detected trains. motif_data tibble details detected motifs. params tibble containing input parameters.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/song_stats_hq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporal and Spectral Statistics for HQ (Narrow-band) Songs — song_stats_hq","text":"","code":"if (FALSE) { # \\dontrun{ data(gryllus) # result <- temporal_stats_hq(gryllus) # result$plot } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/song_stats_lq.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporal and Spectral Statistics of LQ (Broad-band) Songs. — song_stats_lq","title":"Temporal and Spectral Statistics of LQ (Broad-band) Songs. — song_stats_lq","text":"function detects temporal peaks envelope Wave, groups hierarchical structures (.e., trains, motifs, motif sequences), saves suite temporal spectral metrics detection several tables. interactive plot visualizes results, showing envelope signal, detected trains, motifs, key statistics. plot can downloaded HTML (interactive) PNG (static) file.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/song_stats_lq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporal and Spectral Statistics of LQ (Broad-band) Songs. — song_stats_lq","text":"","code":"song_stats_lq(   wave,   specimen_id = \"\",   ssmooth = 100,   peakfinder_ws = 50,   peakfinder_threshold = 0.005,   min_peaks_train = 3,   max_peak_gap = 0.01,   max_peak_diff = NULL,   max_train_gap = 0.3,   motif_seq = TRUE,   max_motif_gap = 0.8,   detection_threshold = 0.15,   norm_env = TRUE,   db_threshold = 20 )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/song_stats_lq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporal and Spectral Statistics of LQ (Broad-band) Songs. — song_stats_lq","text":"wave Wave object. specimen_id character string representing specimen identifier. ssmooth Numeric. Smoothing window size (samples) amplitude envelope. peakfinder_ws Numeric. Window size (samples) peak detection algorithm. peakfinder_threshold Numeric. Amplitude threshold peak detection, proportion maximum amplitude. max_peak_gap Numeric. Maximum allowed gap (seconds) peaks consider part train. max_peak_diff Numeric. Maximum allowed difference (% amplitude) consecutive peaks considered train. max_train_gap Numeric. Maximum allowed gap (seconds) trains consider part motif. motif_seq Logical. TRUE, add first-order aggregation motifs. Default = FALSE. max_motif_gap Numeric. Maximum allowed gap (seconds) motifs consider part group. detection_threshold Numeric. Minimum amplitude peak considered valid. norm_env Logical. Whether normalize amplitude envelope 0 1. Defaults TRUE. db_threshold Numeric. Decibel threshold peak amplitude calculating low high frequencies. Defaults 20 dB. min_peak_train Numeric. Minimum number peaks per train. train found less number, dropped.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/song_stats_lq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporal and Spectral Statistics of LQ (Broad-band) Songs. — song_stats_lq","text":"list containing following components: plot interactive plotly object showing waveform envelope, detected peaks, trains, motifs. summary_data tibble summary statistics analyzed waveform. motif_seq_data tibble summarizing motif sequences. produced motif_seq = TRUE. motif_data tibble summarizing motifs, including motif duration, train counts, spectral properties. train_data tibble detailing detected trains, including start end times, durations, peak frequencies, bandwidths. peak_data tibble containing detected peaks, including times, periods, amplitudes. params tibble summarizing input parameters function.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/song_stats_lq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporal and Spectral Statistics of LQ (Broad-band) Songs. — song_stats_lq","text":"","code":"if (FALSE) { # \\dontrun{ data(coryphoda) # Perform analysis on the coryphoda sample results <- call_stats_lq(   wave = coryphoda,   specimen_id = \"Coryphoda_Sample\",   ssmooth = 100,   peakfinder_ws = 50,   peakfinder_threshold = 0.01,   max_train_gap = 0.5,   max_peak_gap = 0.05,   detection_threshold = 0.2,   norm_env = TRUE,   db_threshold = 20 ) results$plot } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectral_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Spectral Statistics — spectral_stats","title":"Calculate Spectral Statistics — spectral_stats","text":"function calculates various spectral statistics complete Wave object, including peak frequency, bandwidth, spectral entropy, spectral flatness, spectral excursion, spectral energy. generates interactive plot frequency amplitude traces includes options visualize key statistics lines plot.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectral_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Spectral Statistics — spectral_stats","text":"","code":"spectral_stats(   wave,   specimen_id = \"\",   locality = \"\",   sound_type = \"\",   total_range = FALSE,   robust = TRUE,   db = FALSE,   cutoff = 0.5,   lines = TRUE,   temp = NULL,   hpf = 0 )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectral_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Spectral Statistics — spectral_stats","text":"wave Wave object representing sound data. specimen_id Character string specimen identifier. locality Character. locality specimen found. sound_type Character string type sound analyzed. total_range Logical, whether calculate full frequency range. robust Logical, whether use robust frequency resolution (244 Hz). db Logical. TRUE, decibel scale used. FALSE (default), linear scale used. relative peak amplitude Wave. cutoff Numeric, threshold bandwidth calculation. db = FALSE, set 0 1. db = TRUE, set negative dB value. lines Logical, whether add lines min, max, peak frequencies. temp Numeric, optional, temperature degrees Celsius. hpf Numeric, optional, high-pass filter cutoff frequency kHz. Defaults 0.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectral_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Spectral Statistics — spectral_stats","text":"list containing: data: tibble calculated statistics. plot: interactive plotly plot frequency amplitude traces.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectral_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Spectral Statistics — spectral_stats","text":"","code":"if (FALSE) { # \\dontrun{ wave <- readWave(\"example.wav\") result <- spectral_stats(wave) result$plot } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrogram_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardized Spectrogram plus Mean Power Spectrum — spectrogram_ggplot","title":"Standardized Spectrogram plus Mean Power Spectrum — spectrogram_ggplot","text":"Standardized Spectrogram plus Mean Power Spectrum","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrogram_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardized Spectrogram plus Mean Power Spectrum — spectrogram_ggplot","text":"","code":"spectrogram_ggplot(   wave,   meanspec = TRUE,   widths = c(10, 1),   cutoff = -35,   scale_type = \"dB\",   overlap = 95,   zeropad = 200,   margin_l = 10,   margin_r = 0,   margin_t = 0,   margin_b = 10,   show_axis_titles = TRUE )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrogram_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardized Spectrogram plus Mean Power Spectrum — spectrogram_ggplot","text":"wave Wave object tuneR package, representing audio signal analyzed. meanspec Logical. TRUE, mean power spectrum plotted alongside spectrogram. spectrum flipped positioned right. widths numeric vector length 2 specifying relative widths spectrogram mean power spectrum meanspec = TRUE. Defaults c(10, 1). cutoff Numeric. amplitude cutoff dB relative peak amplitude. amplitude cutoff visible spectrogram. Defaults -35. scale_type Character. scale used amplitude. Either \"dB\" decibel scaling \"Linear\" linear amplitude scale. Defaults \"dB\". overlap Numeric. percentage overlap successive windows spectrogram calculation. Defaults 95. zeropad Numeric. number zero-padding points add window increase frequency resolution. Defaults 200. margin_l Numeric. left margin (points) around plot. Defaults 10. margin_r Numeric. right margin (points) around plot. Defaults 0. margin_t Numeric. top margin (points) around plot. Defaults 0. margin_b Numeric. bottom margin (points) around plot. Defaults 10. show_axis_titles Logical. TRUE, axis titles time frequency displayed spectrogram. Defaults TRUE.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrogram_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardized Spectrogram plus Mean Power Spectrum — spectrogram_ggplot","text":"ggplot2 object representing spectrogram, option include mean power spectrum right side.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrogram_ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardized Spectrogram plus Mean Power Spectrum — spectrogram_ggplot","text":"","code":"if (FALSE) { # \\dontrun{ data(coryphoda) # Create a spectrogram with a mean power spectrum for a wave object: spectrogram_ggplot(coryphoda, meanspec = TRUE, cutoff = -40, scale_type = \"dB\")  # Create a spectrogram without the mean power spectrum: spectrogram_ggplot(coryphoda, meanspec = FALSE) } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrogram_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Spectrogram with Standardized Resolution — spectrogram_plotly","title":"Interactive Spectrogram with Standardized Resolution — spectrogram_plotly","text":"Interactive Spectrogram Standardized Resolution","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrogram_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Spectrogram with Standardized Resolution — spectrogram_plotly","text":"","code":"spectrogram_plotly(   wave,   floor = -50,   background = \"#274C77\",   foreground = \"white\",   hover_bgcolor = \"white\",   hover_fontcolor = \"black\",   overlap = 50,   zero_padding = 0 )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrogram_plotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive Spectrogram with Standardized Resolution — spectrogram_plotly","text":"wave Wave object. floor Background noise level, dB FS. background Background color. foreground Color plot lines spectral signatures. hover_bgcolor Color hover background. hover_fontcolor Color hover text. overlap FFT overlap. zero_padding Number zeroes added around signal improve frequency resolution.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrogram_plotly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive Spectrogram with Standardized Resolution — spectrogram_plotly","text":"interactive spectrogram.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrogram_plotly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive Spectrogram with Standardized Resolution — spectrogram_plotly","text":"","code":"if (FALSE) { # \\dontrun{ data(coryphoda) spectrogram_plotly(coryphoda) } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Spectrum Table (Tibble, Data Frame) — spectrum_df","title":"Spectrum Table (Tibble, Data Frame) — spectrum_df","text":"function generates data frame containing frequency amplitude wave object using mean spectrum method. function leverages meanspec function seewave package compute spectrum.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spectrum Table (Tibble, Data Frame) — spectrum_df","text":"","code":"spectrum_df(   wave,   freq_res = 10,   fun = \"mean\",   wn = \"hanning\",   verbose = FALSE,   ... )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spectrum Table (Tibble, Data Frame) — spectrum_df","text":"wave object class Wave containing audio data analyzed. freq_res frequency resolution used frequency spectrum analysis. Use argument consistently standardized measurements across recordings different sampling rate. Default 10 Hz per frequency bin. fun Character string indicating summary function applied computing mean spectrum. Default 'mean'. options include 'median', 'sd' (standard deviation), 'var' (variance). wn Window filtering function. Choices :  bartlett, blackman, flattop, hamming, hanning, rectangle. Default hanning. verbose Logical. TRUE, parameter info printed console. ... arguments passed meanspec() seewave package.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spectrum Table (Tibble, Data Frame) — spectrum_df","text":"list two tibbles. first tibble \"spec_df\" two columns: frequency amplitude, second tibble \"params_df\" contains relevant parameters used create spectrum. frequency column contains frequencies Hertz (Hz), amplitude column contains corresponding amplitude values.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spectrum Table (Tibble, Data Frame) — spectrum_df","text":"","code":"if (FALSE) { # \\dontrun{ spec_df <- meanspec_df(wave, from = 0, to = 5, wl = 1024, fun = 'mean') } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Power Spectrum with ggplot2 — spectrum_ggplot","title":"Power Spectrum with ggplot2 — spectrum_ggplot","text":"function generates power spectrum plot using ggplot2 based provided waveform object (wave). plot can display normalized amplitude values dB linear scales, includes options customizing display carrier frequency, bandwidth, spectral details.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Power Spectrum with ggplot2 — spectrum_ggplot","text":"","code":"spectrum_ggplot(   wave,   auto_wl = TRUE,   wl = NULL,   ovlp = 75,   ymin = -100,   y_breaks = c(-40, -20, 0),   x_breaks = 6,   y_position = \"left\",   x_position = \"bottom\",   flip = FALSE,   color_db = \"#4d4d4d\",   color_linear = \"#000000\",   color_carrier = \"#1e90ff\",   color_threshold = \"#228b22\",   color_bandwidth = \"#228b22\",   fun = \"mean\",   wn = \"blackman\",   show_x_title = TRUE,   show_y_title = TRUE,   add_params = FALSE,   add_summary = TRUE,   plot_title = \"\",   italic_title = FALSE,   fmin = 0,   fmax = NULL,   linewidth = 1,   total_bandwidth = FALSE,   show_lines = FALSE )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Power Spectrum with ggplot2 — spectrum_ggplot","text":"wave Wave object (tuneR package), representing sound waveform. auto_wl Logical. TRUE, window length (wl) automatically calculated based sampling rate waveform. wl Numeric. Window length FFT. Ignored auto_wl TRUE. ovlp Numeric. Overlap windows percentage (0 100). Default 75. ymin Numeric. Minimum value y-axis (used plotting dB scale). y_breaks Numeric vector. Break points y-axis dB scale plot. x_breaks Integer. Number breaks x-axis (frequency). y_position Character. Position y-axis: \"left\" \"right\". x_position Character. Position x-axis: \"bottom\" \"top\". flip Logical. TRUE, flips x y axes. color_db Character. Color dB scale plot. color_linear Character. Color linear scale plot. color_carrier Character. Color carrier frequency line. color_threshold Character. Color threshold line. color_bandwidth Character. Color bandwidth lines. fun Character. Summary function calculating power spectrum, default \"mean\". wn Character. Windowing function FFT. Default \"blackman\". show_x_title Logical. TRUE, displays x-axis title. show_y_title Logical. TRUE, displays y-axis title. add_params Logical. TRUE, adds parameter information (window size, overlap, etc.) plot. add_summary Logical. TRUE, adds spectral summary statistics (entropy, flatness, carrier frequency, bandwidth) plot. plot_title Character. Title plot. italic_title Logical. TRUE, italicizes plot title. fmin Numeric. Minimum frequency display (kHz). fmax Numeric. Maximum frequency display (kHz). NULL, defaults half sampling rate (Nyquist frequency). linewidth Numeric. Line width carrier bandwidth lines. total_bandwidth Logical. TRUE, calculates total bandwidth using threshold 0.1. show_lines Logical. TRUE, displays lines carrier frequency bandwidth.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Power Spectrum with ggplot2 — spectrum_ggplot","text":"ggplot object power spectrum plot.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Power Spectrum with ggplot2 — spectrum_ggplot","text":"","code":"if (FALSE) { # \\dontrun{ spectrum_ggplot(coryphoda) } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Spectrum Plot using Plotly — spectrum_plotly","title":"Interactive Spectrum Plot using Plotly — spectrum_plotly","text":"function generates interactive spectrum plot using Plotly, offering customizable options windowing, overlap, amplitude shading (dB linear), ability display summary statistics parameter annotations. function supports dB linear scales, bandwidth calculations, frequency markers.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Spectrum Plot using Plotly — spectrum_plotly","text":"","code":"spectrum_plotly(   wave,   freq_res = 50,   db_shade = TRUE,   ovlp = 0,   fun = \"mean\",   wn = \"blackman\",   total_bandwidth = FALSE,   limit_indices = FALSE,   plot_title = \"\",   italic_title = TRUE,   fmin = 0,   fmax = NULL,   add_params = FALSE,   add_summary = FALSE,   x_breaks = 10,   y_position = \"left\",   x_position = \"bottom\",   show_x_title = TRUE,   show_y_title = TRUE,   color_db = \"grey\",   color_linear = \"black\",   color_carrier = \"white\",   color_threshold = \"white\",   color_bandwidth = \"white\",   show_lines = FALSE,   linewidth = 1 )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_plotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive Spectrum Plot using Plotly — spectrum_plotly","text":"wave wave object containing audio data. freq_res Numeric, frequency resolution Hz per bin. Default 50. db_shade Logical, whether shade plot based decibel amplitude. Default TRUE. ovlp Numeric, overlap successive windows percentage. Default 0 (overlap). fun Character, summary function apply spectrum, one \"mean\", \"median\", \"var\", \"sd\". Default \"mean\". wn Character, window type FFT, one \"hanning\", \"bartlett\", \"blackman\", \"flattop\", \"hamming\", \"rectangle\". Default \"hanning\". total_bandwidth Logical, whether calculate total bandwidth, ignoring gaps. Default FALSE. limit_indices Logical, whether limit spectrum indices frequency range fmin fmax. Default FALSE. plot_title Character, title plot. Default empty string. italic_title Logical, whether italicize plot title. Default FALSE. fmin Numeric, minimum frequency (kHz) plot. NULL, entire frequency range plotted. Default NULL. fmax Numeric, maximum frequency (kHz) plot. NULL, defaults Nyquist frequency. add_params Logical, whether add window parameters label plot. Default FALSE. add_summary Logical, whether add summary statistics label plot. Default TRUE. x_breaks Numeric, number breaks x-axis (frequency axis). Default 6. y_position Character, position y-axis, either \"left\" \"right\". Default \"left\". x_position Character, position x-axis, either \"top\" \"bottom\". Default \"bottom\". show_x_title Logical, whether show x-axis title. Default TRUE. show_y_title Logical, whether show y-axis title. Default TRUE. color_db Character, color dB amplitude plot. Default \"grey30\". color_linear Character, color linear amplitude plot. Default \"black\". color_carrier Character, color carrier frequency marker. Default \"white\". color_threshold Character, color threshold line. Default \"white\". color_bandwidth Character, color bandwidth lines. Default \"white\". show_lines Logical, whether show lines carrier frequency bandwidths. Default FALSE. linewidth Numeric, width lines plot. Default 1.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_plotly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive Spectrum Plot using Plotly — spectrum_plotly","text":"list including: Plotly object, summary table (data frame).","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_plotly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive Spectrum Plot using Plotly — spectrum_plotly","text":"","code":"if (FALSE) { # \\dontrun{ spectrum_plotly(Coryphoda_albidicollis, db_shade = FALSE, freq_res = 100, show_lines = TRUE) } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_pop.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a representative spectrum of a population (or subspecies, species, etc.) — spectrum_pop","title":"Plot a representative spectrum of a population (or subspecies, species, etc.) — spectrum_pop","text":"function generates averaged Power Spectral Density (PSD) plot multiple input Waves (e.g., population, species, etc,).","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a representative spectrum of a population (or subspecies, species, etc.) — spectrum_pop","text":"","code":"spectrum_pop(   waves,   binomial = NULL,   freq_res = 400,   s_rate_out = 96000,   fun = \"mean\",   wn = \"hanning\",   flim = NULL,   line_color = \"green4\",   line_width = 1,   sd_color = \"dodgerblue\",   sd_alpha = 0.5,   title_x = \"Frequency (kHz)\",   title_y = \"\",   show_x_labs = TRUE,   show_y_labs = FALSE,   show_n = TRUE,   save_to = NULL,   save = FALSE,   width = 960,   height = 540,   dpi = 200 )"},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_pop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a representative spectrum of a population (or subspecies, species, etc.) — spectrum_pop","text":"binomial Character. binomial name species. Empty default. freq_res Numeric. frequency resolution used frequency spectrum analysis. Use argument consistently standardized measurements across recordings different sampling rate. Default 10 Hz per frequency bin. s_rate_out Sample rate output summary PSD, kHz. fun Character. Select function compute power spectrum. Options \"mean\", \"median\", \"sd\", \"var\". wn Character. Select window function FFT. Options \"hanning\" (Default), \"hamming\", bartlett\", \"blackaman\", \"flattop\", \"rectangular\". flim Numeric list length 2. Range frequency axis (KhZ). line_color Character. Color line representing mean PSD. line_width Numeric. Width mean line. sd_color Character. Color standard deviation ribbon. sd_alpha Numeric. Transparency level SD ribbon. Default 0.3 (30%). title_x Character. Title X-axis. Default \"Frequency (kHz)\". title_y Character. Title Y-axis. Empty default. show_x_labs Logical. TRUE, labels (.e., numbers) shown X-axis. Defaults TRUE. show_y_labs Logical. TRUE, labels (.e., numbers) shown Y-axis. Defaults FALSE show_n Logical. TRUE, number samples (.e., recordings) shown \"n=\" top-right plot. save Logical. Whether save plot immediately. width Numeric. Relative width output plot. Default 960. height Numeric. Relative height output plot. Default 540. dpi Numeric. Resolution dots per inch. Default 200. wave object class Wave containing audio data analyzed.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_pop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a representative spectrum of a population (or subspecies, species, etc.) — spectrum_pop","text":"averaged smoothed power spectral density plot representing Waves list provided waves argument. plot shows mean confidence interval (95% default) along peak frequency, scientific name species provided binomial argument, number samples (Wave objects) mean calculated.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/spectrum_pop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a representative spectrum of a population (or subspecies, species, etc.) — spectrum_pop","text":"","code":"if (FALSE) { # \\dontrun{ library(RthopteraSounds) data(coryphoda) data(tettigonia) # Assume the two Waves are two individuals from the same species waves_list <- c(coryphoda, tettigonia) population_spectrum(waves = waves_list, freq_res = 50, show_x_labs = TRUE, title_x = \"\", show_n = TRUE, binomial = \"Coryphoda albidicollis\") } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/wave_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the waveform values as a table — wave_df","title":"Extract the waveform values as a table — wave_df","text":"Extract waveform values table","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/wave_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the waveform values as a table — wave_df","text":"","code":"wave_df(wave, norm = TRUE)"},{"path":"https://naturewaves.github.io/Rthoptera/reference/wave_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the waveform values as a table — wave_df","text":"wave Wave object. norm Logical. true, amplitude values rescaled range -1 1.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/wave_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the waveform values as a table — wave_df","text":"tibble data frame.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/wave_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the waveform values as a table — wave_df","text":"","code":"if (FALSE) { # \\dontrun{ data(coryphoda) wave_df(coryphoda) } # }"},{"path":"https://naturewaves.github.io/Rthoptera/reference/wave_info.html","id":null,"dir":"Reference","previous_headings":"","what":"List and Summarize Wave Objects in the Environment — wave_info","title":"List and Summarize Wave Objects in the Environment — wave_info","text":"Scans global environment objects class Wave (tuneR package) returns summary table key attributes, including duration, sample rate, bit depth, channel configuration.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/wave_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List and Summarize Wave Objects in the Environment — wave_info","text":"","code":"wave_info()"},{"path":"https://naturewaves.github.io/Rthoptera/reference/wave_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List and Summarize Wave Objects in the Environment — wave_info","text":"data.frame one row per Wave object following columns: Name Name object environment (character) Duration Length seconds (numeric, rounded 2 decimal places) SampleRate Sampling rate Hz (integer) BitDepth Bit depth (integer, typically 16 24) Channels \"Mono\" \"Stereo\" (character) Samples Total number samples (integer) Returns NULL (invisibly) message Wave objects found.","code":""},{"path":"https://naturewaves.github.io/Rthoptera/reference/wave_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List and Summarize Wave Objects in the Environment — wave_info","text":"","code":"if (FALSE) { # \\dontrun{ # Create example Wave objects library(tuneR) sine_wave <- sine(440, duration = 1, samp.rate = 44100, bit = 16) noise_wave <- noise(duration = 0.5, samp.rate = 48000, bit = 24)  # Get summary table wave_info() } # }"}]
