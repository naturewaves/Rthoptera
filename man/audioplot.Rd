% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/audioplot.R
\name{audioplot}
\alias{audioplot}
\title{Fast Spectrogram with Derived Pseudo-Oscillogram and Power Spectrum}
\usage{
audioplot(
  wave,
  fft = "auto",
  enhance = "time",
  overlap = 75,
  window = "hann",
  contrast = 60,
  flim = NULL,
  tlim = NULL,
  zero.pad = 8,
  output.file = NULL,
  plot.title = "",
  use.ragg = TRUE,
  palette = "inferno",
  osc.show = TRUE,
  osc.color = "black",
  osc.height = 0.25,
  spec.show = TRUE,
  spec.fun = "mean",
  spec.color = "black",
  spec.width = 0.15,
  spec.linear = TRUE
)
}
\arguments{
\item{wave}{Wave object from tuneR package}

\item{fft}{Size of FFT window (must be power of 2). Default is "auto", which
automatically calculates a proper length (see q.factor options).}

\item{enhance}{Either 'freq' to prioritize frequency resolution or 'time' to
prioritize temporal resolution.}

\item{overlap}{Overlap between windows (0 to 95\%)}

\item{window}{Type of window function ("hann", "hamming", "blackman")}

\item{contrast}{Controls the dynamic range for visualization (0-100\%)}

\item{flim}{Numeric list of length 2. Frequency limits, in kHz.}

\item{zero.pad}{Zero-padding factor}

\item{output.file}{Optional file path to save the spectrogram}

\item{plot.title}{Plot title}

\item{use.ragg}{Whether to use RAGG for GPU-accelerated rendering}

\item{palette}{Color palette for spectrogram}

\item{osc.show}{Whether to show the oscillogram}

\item{osc.color}{Color for the pseudo-oscillogram}

\item{osc.height}{Relative height of oscillogram (0-1)}

\item{spec.show}{Whether to show the power spectrum}

\item{spec.color}{Color for the power spectrum.}

\item{spec.width}{Relative width of power spectrum (0-1)}

\item{spec.linear}{Whether to show the power spectrum in linear scale. Default
is TRUE.}
}
\value{
Invisible list containing spectrogram data
}
\description{
Fast Spectrogram with Derived Pseudo-Oscillogram and Power Spectrum
}
\details{
When fft is set to 'auto' (recommended), the function takes the 'enhance'
argument to decide whether to enhance spectral or temporal resolution. We
recommend "enhance= 'freq'" for high-quality factor (i.e., 'tonal') sounds
such as those produced by most crickets, and "enhance='time" for low-quality
factor (i.e., 'raspy') sounds such as those produced by katydids and cicadas.
}
\examples{
\dontrun{
library(RthopteraSounds)
data("coryphoda")
data("gryllus")
audioplot(coryphoda, enhance = "time",
osc.show = F, palette = 'Zissou 1')
audioplot(coryphoda, enhance = 'time', osc.show = F,
spec.linear = T) # great
audioplot(coryphoda, enhance = "time")
audioplot(gryllus, enhance = "freq")
audioplot(gryllus, enhance = "time")}
}
